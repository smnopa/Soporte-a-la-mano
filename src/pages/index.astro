---
import Layout from '../layouts/Layout.astro';
import Form from '../components/Form.astro';
---

<Layout>
  <div class="min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12">
    <div class="relative py-3 sm:max-w-xl sm:mx-auto">
      <div class="relative px-4 py-10 bg-white mx-8 md:mx-0 shadow rounded-3xl sm:p-10">
        <div class="max-w-md mx-auto">
            <!-- Logo -->
          <div class="flex items-center justify-center">
            <img src="/logoSena.png" alt="SENA Logo" class="h-16" />
          </div>
          <div class="divide-y divide-gray-200">
            <div class="py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7">
              <!-- Titulo -->
              <h1 class="text-2xl font-bold text-center mb-8">Soporte a la Mano</h1>
              <!-- Formulario -->
              <Form/>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import SignaturePad from 'signature_pad';
  import html2pdf from 'html2pdf.js';
  
  // Modal de firma
  const signatureModal = document.getElementById('signatureModal');
    const openSignatureButton = document.getElementById('openSignature');
    const closeSignatureButton = document.getElementById('closeSignature');
    const saveSignatureButton = document.getElementById('saveSignature');
    const clearSignatureButton = document.getElementById('clearSignature');
    const signatureImage = document.getElementById('signatureImage');

  // Inicializar el pad de firma
  const canvas = document.getElementById('signaturePad');
  const signaturePad = new SignaturePad(canvas);
  
   // Función para ajustar el tamaño del canvas
   function resizeCanvas() {
      const ratio = Math.max(window.devicePixelRatio || 1, 1);
      canvas.width = canvas.offsetWidth * ratio;
      canvas.height = canvas.offsetHeight * ratio;
      canvas.getContext("2d").scale(ratio, ratio);
      signaturePad.clear();
    }
  
    // Abrir el modal de firma
    openSignatureButton.addEventListener('click', () => {
      signatureModal.classList.remove('hidden');
      signatureModal.classList.add('flex');
      resizeCanvas();
    });
  
    // Cerrar el modal
    closeSignatureButton.addEventListener('click', () => {
      signatureModal.classList.add('hidden');
      signatureModal.classList.remove('flex');
    });
  
    // Limpiar la firma
    clearSignatureButton.addEventListener('click', () => {
      signaturePad.clear();
    });
  
    // Guardar la firma y rotarla
    saveSignatureButton.addEventListener('click', () => {
      if (!signaturePad.isEmpty()) {
        // Crear un canvas temporal para la rotación
        const tempCanvas = document.createElement('canvas');
        const tempCtx = tempCanvas.getContext('2d');
  
        // Asignar dimensiones rotadas
        tempCanvas.width = canvas.height;
        tempCanvas.height = canvas.width;
  
        // Rotar 90 grados
        tempCtx.translate(tempCanvas.width / 2, tempCanvas.height / 2);
        tempCtx.rotate(Math.PI / 2); // 90 grados en lugar de -90
        tempCtx.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);
  
        // Obtener el DataURL rotado
        const rotatedDataURL = tempCanvas.toDataURL();
  
        // Mostrar la firma rotada
        signatureImage.src = rotatedDataURL;
        signatureImage.classList.remove('hidden');
  
        // Cerrar el modal
        signatureModal.classList.add('hidden');
        signatureModal.classList.remove('flex');
      }
    });
  
  // Generar número de ticket automáticamente
  function generateTicketNumber() {
    const now = new Date();
    const day = String(now.getDate()).padStart(2, '0');
    const month = String(now.getMonth() + 1).padStart(2, '0');
    const year = String(now.getFullYear()).slice(-2);
    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    
    return `${day}${month}${year}-${hours}:${minutes}`;
  }
  
  document.getElementById('ticketNumber').value = generateTicketNumber();
  
  // Almacenar las imágenes como base64
  let uploadedImages = [];
  
  // Manejo de imágenes
  document.getElementById('photos').addEventListener('change', function(e) {
    const container = document.getElementById('imageContainer');
    
    for (let file of e.target.files) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const imageData = e.target.result;
        uploadedImages.push(imageData);
        
        const div = document.createElement('div');
        div.className = 'relative';
        
        const img = document.createElement('img');
        img.src = imageData;
        img.className = 'h-20 w-20 object-cover rounded';
        
        const deleteBtn = document.createElement('button');
        deleteBtn.innerHTML = '×';
        deleteBtn.className = 'absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center';
        deleteBtn.onclick = function() {
          const index = uploadedImages.indexOf(imageData);
          if (index > -1) {
            uploadedImages.splice(index, 1);
          }
          div.remove();
        };
        
        div.appendChild(img);
        div.appendChild(deleteBtn);
        container.appendChild(div);
      };
      reader.readAsDataURL(file);
    }
  });
  
  // Manejo del formulario
  document.getElementById('supportForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // Crear el PDF
    const element = document.createElement('div');
  element.innerHTML = `
    <div style="padding: 40px; font-family: Arial, sans-serif; color: #000; font-size: 14px;">

      <!-- Logo y título -->
      <div style="text-align: center; margin-bottom: 10px;">
        <img src="/logoSena.png" style="height: 80px; display: block; margin: 0 auto;">
        <div style="font-size: 14px; margin-top: 5px; color: #00af00;">Soporte a la mano</div>
      </div>

      <div style="text-align: center; margin-bottom: 20px;">
        <div style="font-size: 14px; margin-top: 5px;">Comprobante de Soporte Técnico del ID: ${document.getElementById('idSelector').value}</div>
      </div>

      <!-- Caso y Fecha -->
      <div style="display: flex; justify-content: space-between; margin-bottom: 20px;">
        <div><strong>Nro de Caso en MS:</strong> ${document.getElementById('caseNumber').value || 'Ninguno'}</div>
        <div><strong>Nro de Ticket / Fecha de atención:</strong> ${document.getElementById('ticketNumber').value}</div>
      </div>

      <!-- Detalle del Soporte -->
      <p style="margin-bottom: 30px;">
        El Soporte <strong>${document.getElementById('supportName').value}</strong> con correo electrónico 
        <strong><a href="mailto:${document.getElementById('supportEmail').value}">${document.getElementById('supportEmail').value}</a></strong>, 
        siendo el día y hora <strong>${document.getElementById('ticketNumber').value}</strong> atendió el 
        incidente:<strong> ${document.getElementById('issue').value}</strong>; 
        en el dispositivo: <strong>${document.getElementById('deviceType').value}</strong> con 
        serial o placa<strong> ${document.getElementById('serialNumber').value}</strong>, se brindó la siguiente
        solución: <strong>${document.getElementById('solution').value}.</strong>
      </p>

      <!-- Detalle del Usuario -->
      <p style="margin-bottom: 40px;">
        El Usuario <strong>${document.getElementById('userName').value}</strong> con correo electrónico 
        <strong><a href="mailto:${document.getElementById('userEmail').value}">${document.getElementById('userEmail').value}</a></strong>, 
        <strong>${document.querySelector('input[name="conformity"]:checked').value === 'si' ? 'Sí está conforme' : 'No está conforme'}</strong>, con la atención brindada.
      </p>

      <!-- Observaciones -->
      <div style="margin-bottom: 40px;">
        <strong>Observación:</strong><br>
        ${document.getElementById('observations').value || 'Ninguna'}
      </div>

      <!-- Firma -->
      <div style="margin-bottom: 40px;">
        <strong>Visto bueno:</strong><br>
        <img src="${signaturePad.toDataURL()}" style="max-width: 250px; height: auto; margin-top: 10px;">
      </div>

      <!-- SALTO DE PÁGINA PARA LA SEGUNDA SECCIÓN -->
      <div style="page-break-before: always;"></div>

      <strong style="font-size: 16px;">Evidencia Fotográfica</strong>
      <div id="imagesWrapper" style="margin-top: 15px; display: flex; flex-wrap: wrap; gap: 12px;"></div>
    </div>
  `;
  
const wrapper = element.querySelector('#imagesWrapper');
let imagesInPage = 0; // Contador de imágenes en la página actual

for (let i = 0; i < uploadedImages.length; i++) {
  const img = new Image();
  img.src = uploadedImages[i];

  await new Promise(resolve => {
    img.onload = () => {
      // Crear un contenedor para la imagen
      const div = document.createElement('div');
      div.style = `
        width: 100%;
        max-width: 400px; /* Tamaño máximo más grande para las imágenes */
        height: 400px; /* Altura fija más grande para las imágenes */
        margin: 0 auto 10px auto; /* Espaciado inferior más grande */
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden; /* Ocultar cualquier parte que sobresalga */
      `;

      // Estilo de la imagen
      img.style = `
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ajustar la imagen sin deformarla */
      `;

      div.appendChild(img);
      wrapper.appendChild(div);
      imagesInPage++;

      // Si ya hay 2 imágenes en la página, añade un salto de página
      if (imagesInPage === 2 && i !== uploadedImages.length - 1) {
        const pageBreak = document.createElement('div');
        pageBreak.style = 'page-break-before: always;';
        wrapper.appendChild(pageBreak);
        imagesInPage = 0; // Reinicia el contador para la nueva página
      }

      resolve();
    };
  });
}
    const opt = {
      margin: 1,
      filename: `reporte-${document.getElementById('serialNumber').value}-${document.getElementById('ticketNumber').value}.pdf`,
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
    };
  
    try {
  await html2pdf().set(opt).from(element).save();

  alert('Reporte PDF generado correctamente');

  const numero = document.getElementById('userNumber').value.trim().replace(/\D/g, '').slice(-10);
  const mensaje = encodeURIComponent("Hola, te envío el reporte técnico desde Soporte a la Mano 📋✅");

  // Intentar redirigir automáticamente a WhatsApp después de un tiempo
  setTimeout(() => {
    window.location.href = `https://wa.me/57${numero}?text=${mensaje}`;
  }, 1500);

  // Limpieza de formulario
  this.reset();
  signaturePad.clear();
  document.getElementById('imageContainer').innerHTML = '';
  document.getElementById('ticketNumber').value = generateTicketNumber();
  uploadedImages = [];
} catch (error) {
  alert('Error al generar el PDF: ' + error.message);
}
  });
  </script>   

<style>
  input[type="text"],
  input[type="email"],
  textarea {
    @apply border-gray-300 rounded-md shadow-sm;
  }
  
  canvas {
    touch-action: none;
  }
</style>